package com.cantatahealth.fhir.db.model;
// Generated Oct 31, 2017 5:51:36 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PractitionerDbEntity generated by hbm2java
 */
@Entity
@Table(name = "Practitioner", schema = "dbo", catalog = "FHIRDB")
public class PractitionerDbEntity implements java.io.Serializable {

	private long id;
	private String gender;
	private Date createddate;
	private String createdby;
	private Date updateddate;
	private String updatedby;
	private Set<ConditionDbEntity> conditionDbEntities = new HashSet<ConditionDbEntity>(0);
	private Set<PatientMapDbEntity> patientMapDbEntities = new HashSet<PatientMapDbEntity>(0);
	private Set<EncounterMapDbEntity> encounterMapDbEntities = new HashSet<EncounterMapDbEntity>(0);
	private Set<PractitionerMapDbEntity> practitionerMapDbEntities = new HashSet<PractitionerMapDbEntity>(0);
	private Set<ImmunizationMapDbEntity> immunizationMapDbEntities = new HashSet<ImmunizationMapDbEntity>(0);
	private Set<MedicationAdministrationMapDbEntity> medicationAdministrationMapDbEntities = new HashSet<MedicationAdministrationMapDbEntity>(
			0);
	private Set<AllergyIntoleranceMapDbEntity> allergyIntoleranceMapDbEntities = new HashSet<AllergyIntoleranceMapDbEntity>(
			0);
	private Set<ReferralRequestDbEntity> referralRequestDbEntities = new HashSet<ReferralRequestDbEntity>(0);
	private Set<ProcedureMapDbEntity> procedureMapDbEntities = new HashSet<ProcedureMapDbEntity>(0);
	private Set<CareTeamMapDbEntity> careTeamMapDbEntities = new HashSet<CareTeamMapDbEntity>(0);
	private Set<GoalDbEntity> goalDbEntities = new HashSet<GoalDbEntity>(0);
	private Set<ObservationMapDbEntity> observationMapDbEntities = new HashSet<ObservationMapDbEntity>(0);

	public PractitionerDbEntity() {
	}

	public PractitionerDbEntity(long id) {
		this.id = id;
	}

	public PractitionerDbEntity(long id, String gender, Date createddate, String createdby, Date updateddate,
			String updatedby, Set<ConditionDbEntity> conditionDbEntities, Set<PatientMapDbEntity> patientMapDbEntities,
			Set<EncounterMapDbEntity> encounterMapDbEntities, Set<PractitionerMapDbEntity> practitionerMapDbEntities,
			Set<ImmunizationMapDbEntity> immunizationMapDbEntities,
			Set<MedicationAdministrationMapDbEntity> medicationAdministrationMapDbEntities,
			Set<AllergyIntoleranceMapDbEntity> allergyIntoleranceMapDbEntities,
			Set<ReferralRequestDbEntity> referralRequestDbEntities, Set<ProcedureMapDbEntity> procedureMapDbEntities,
			Set<CareTeamMapDbEntity> careTeamMapDbEntities, Set<GoalDbEntity> goalDbEntities,
			Set<ObservationMapDbEntity> observationMapDbEntities) {
		this.id = id;
		this.gender = gender;
		this.createddate = createddate;
		this.createdby = createdby;
		this.updateddate = updateddate;
		this.updatedby = updatedby;
		this.conditionDbEntities = conditionDbEntities;
		this.patientMapDbEntities = patientMapDbEntities;
		this.encounterMapDbEntities = encounterMapDbEntities;
		this.practitionerMapDbEntities = practitionerMapDbEntities;
		this.immunizationMapDbEntities = immunizationMapDbEntities;
		this.medicationAdministrationMapDbEntities = medicationAdministrationMapDbEntities;
		this.allergyIntoleranceMapDbEntities = allergyIntoleranceMapDbEntities;
		this.referralRequestDbEntities = referralRequestDbEntities;
		this.procedureMapDbEntities = procedureMapDbEntities;
		this.careTeamMapDbEntities = careTeamMapDbEntities;
		this.goalDbEntities = goalDbEntities;
		this.observationMapDbEntities = observationMapDbEntities;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false, precision = 18, scale = 0)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Column(name = "gender")
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createddate", length = 23)
	public Date getCreateddate() {
		return this.createddate;
	}

	public void setCreateddate(Date createddate) {
		this.createddate = createddate;
	}

	@Column(name = "createdby")
	public String getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updateddate", length = 23)
	public Date getUpdateddate() {
		return this.updateddate;
	}

	public void setUpdateddate(Date updateddate) {
		this.updateddate = updateddate;
	}

	@Column(name = "updatedby")
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "practitionerDbEntity")
	public Set<ConditionDbEntity> getConditionDbEntities() {
		return this.conditionDbEntities;
	}

	public void setConditionDbEntities(Set<ConditionDbEntity> conditionDbEntities) {
		this.conditionDbEntities = conditionDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "practitionerDbEntity")
	public Set<PatientMapDbEntity> getPatientMapDbEntities() {
		return this.patientMapDbEntities;
	}

	public void setPatientMapDbEntities(Set<PatientMapDbEntity> patientMapDbEntities) {
		this.patientMapDbEntities = patientMapDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "practitionerDbEntity")
	public Set<EncounterMapDbEntity> getEncounterMapDbEntities() {
		return this.encounterMapDbEntities;
	}

	public void setEncounterMapDbEntities(Set<EncounterMapDbEntity> encounterMapDbEntities) {
		this.encounterMapDbEntities = encounterMapDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "practitionerDbEntity")
	public Set<PractitionerMapDbEntity> getPractitionerMapDbEntities() {
		return this.practitionerMapDbEntities;
	}

	public void setPractitionerMapDbEntities(Set<PractitionerMapDbEntity> practitionerMapDbEntities) {
		this.practitionerMapDbEntities = practitionerMapDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "practitionerDbEntity")
	public Set<ImmunizationMapDbEntity> getImmunizationMapDbEntities() {
		return this.immunizationMapDbEntities;
	}

	public void setImmunizationMapDbEntities(Set<ImmunizationMapDbEntity> immunizationMapDbEntities) {
		this.immunizationMapDbEntities = immunizationMapDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "practitionerDbEntity")
	public Set<MedicationAdministrationMapDbEntity> getMedicationAdministrationMapDbEntities() {
		return this.medicationAdministrationMapDbEntities;
	}

	public void setMedicationAdministrationMapDbEntities(
			Set<MedicationAdministrationMapDbEntity> medicationAdministrationMapDbEntities) {
		this.medicationAdministrationMapDbEntities = medicationAdministrationMapDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "practitionerDbEntity")
	public Set<AllergyIntoleranceMapDbEntity> getAllergyIntoleranceMapDbEntities() {
		return this.allergyIntoleranceMapDbEntities;
	}

	public void setAllergyIntoleranceMapDbEntities(Set<AllergyIntoleranceMapDbEntity> allergyIntoleranceMapDbEntities) {
		this.allergyIntoleranceMapDbEntities = allergyIntoleranceMapDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "practitionerDbEntity")
	public Set<ReferralRequestDbEntity> getReferralRequestDbEntities() {
		return this.referralRequestDbEntities;
	}

	public void setReferralRequestDbEntities(Set<ReferralRequestDbEntity> referralRequestDbEntities) {
		this.referralRequestDbEntities = referralRequestDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "practitionerDbEntity")
	public Set<ProcedureMapDbEntity> getProcedureMapDbEntities() {
		return this.procedureMapDbEntities;
	}

	public void setProcedureMapDbEntities(Set<ProcedureMapDbEntity> procedureMapDbEntities) {
		this.procedureMapDbEntities = procedureMapDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "practitionerDbEntity")
	public Set<CareTeamMapDbEntity> getCareTeamMapDbEntities() {
		return this.careTeamMapDbEntities;
	}

	public void setCareTeamMapDbEntities(Set<CareTeamMapDbEntity> careTeamMapDbEntities) {
		this.careTeamMapDbEntities = careTeamMapDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "practitionerDbEntity")
	public Set<GoalDbEntity> getGoalDbEntities() {
		return this.goalDbEntities;
	}

	public void setGoalDbEntities(Set<GoalDbEntity> goalDbEntities) {
		this.goalDbEntities = goalDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "practitionerDbEntity")
	public Set<ObservationMapDbEntity> getObservationMapDbEntities() {
		return this.observationMapDbEntities;
	}

	public void setObservationMapDbEntities(Set<ObservationMapDbEntity> observationMapDbEntities) {
		this.observationMapDbEntities = observationMapDbEntities;
	}

}
