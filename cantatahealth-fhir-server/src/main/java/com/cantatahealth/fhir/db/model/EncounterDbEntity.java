package com.cantatahealth.fhir.db.model;
// Generated Oct 31, 2017 5:51:36 PM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * EncounterDbEntity generated by hbm2java
 */
@Entity
@Table(name = "Encounter", schema = "dbo", catalog = "FHIRDB")
public class EncounterDbEntity implements java.io.Serializable {

	private long id;
	private CodingDbEntity codingDbEntityByClass;
	private CodingDbEntity codingDbEntityByStatus;
	private OrganizationDbEntity organizationDbEntity;
	private PatientDbEntity patientDbEntity;
	private PeriodDbEntity periodDbEntity;
	private Set<EncounterMapDbEntity> encounterMapDbEntities = new HashSet<EncounterMapDbEntity>(0);
	private Set<ProcedureDbEntity> procedureDbEntities = new HashSet<ProcedureDbEntity>(0);
	private Set<ImmunizationDbEntity> immunizationDbEntities = new HashSet<ImmunizationDbEntity>(0);
	private Set<ReferralRequestDbEntity> referralRequestDbEntities = new HashSet<ReferralRequestDbEntity>(0);
	private Set<CareTeamDbEntity> careTeamDbEntities = new HashSet<CareTeamDbEntity>(0);
	private Set<ConditionDbEntity> conditionDbEntities = new HashSet<ConditionDbEntity>(0);
	private Set<ProcedureDbEntity> procedureDbEntities_1 = new HashSet<ProcedureDbEntity>(0);
	private Set<MedicationAdministrationDbEntity> medicationAdministrationDbEntities = new HashSet<MedicationAdministrationDbEntity>(
			0);
	private Set<ConditionDbEntity> conditionDbEntities_1 = new HashSet<ConditionDbEntity>(0);
	private Set<ObservationDbEntity> observationDbEntities = new HashSet<ObservationDbEntity>(0);

	public EncounterDbEntity() {
	}

	public EncounterDbEntity(long id) {
		this.id = id;
	}

	public EncounterDbEntity(long id, CodingDbEntity codingDbEntityByClass, CodingDbEntity codingDbEntityByStatus,
			OrganizationDbEntity organizationDbEntity, PatientDbEntity patientDbEntity, PeriodDbEntity periodDbEntity,
			Set<EncounterMapDbEntity> encounterMapDbEntities, Set<ProcedureDbEntity> procedureDbEntities,
			Set<ImmunizationDbEntity> immunizationDbEntities, Set<ReferralRequestDbEntity> referralRequestDbEntities,
			Set<CareTeamDbEntity> careTeamDbEntities, Set<ConditionDbEntity> conditionDbEntities,
			Set<ProcedureDbEntity> procedureDbEntities_1,
			Set<MedicationAdministrationDbEntity> medicationAdministrationDbEntities,
			Set<ConditionDbEntity> conditionDbEntities_1, Set<ObservationDbEntity> observationDbEntities) {
		this.id = id;
		this.codingDbEntityByClass = codingDbEntityByClass;
		this.codingDbEntityByStatus = codingDbEntityByStatus;
		this.organizationDbEntity = organizationDbEntity;
		this.patientDbEntity = patientDbEntity;
		this.periodDbEntity = periodDbEntity;
		this.encounterMapDbEntities = encounterMapDbEntities;
		this.procedureDbEntities = procedureDbEntities;
		this.immunizationDbEntities = immunizationDbEntities;
		this.referralRequestDbEntities = referralRequestDbEntities;
		this.careTeamDbEntities = careTeamDbEntities;
		this.conditionDbEntities = conditionDbEntities;
		this.procedureDbEntities_1 = procedureDbEntities_1;
		this.medicationAdministrationDbEntities = medicationAdministrationDbEntities;
		this.conditionDbEntities_1 = conditionDbEntities_1;
		this.observationDbEntities = observationDbEntities;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false, precision = 18, scale = 0)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "class")
	public CodingDbEntity getCodingDbEntityByClass() {
		return this.codingDbEntityByClass;
	}

	public void setCodingDbEntityByClass(CodingDbEntity codingDbEntityByClass) {
		this.codingDbEntityByClass = codingDbEntityByClass;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status")
	public CodingDbEntity getCodingDbEntityByStatus() {
		return this.codingDbEntityByStatus;
	}

	public void setCodingDbEntityByStatus(CodingDbEntity codingDbEntityByStatus) {
		this.codingDbEntityByStatus = codingDbEntityByStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "serviceprovider")
	public OrganizationDbEntity getOrganizationDbEntity() {
		return this.organizationDbEntity;
	}

	public void setOrganizationDbEntity(OrganizationDbEntity organizationDbEntity) {
		this.organizationDbEntity = organizationDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "subject")
	public PatientDbEntity getPatientDbEntity() {
		return this.patientDbEntity;
	}

	public void setPatientDbEntity(PatientDbEntity patientDbEntity) {
		this.patientDbEntity = patientDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "period")
	public PeriodDbEntity getPeriodDbEntity() {
		return this.periodDbEntity;
	}

	public void setPeriodDbEntity(PeriodDbEntity periodDbEntity) {
		this.periodDbEntity = periodDbEntity;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "encounterDbEntity")
	public Set<EncounterMapDbEntity> getEncounterMapDbEntities() {
		return this.encounterMapDbEntities;
	}

	public void setEncounterMapDbEntities(Set<EncounterMapDbEntity> encounterMapDbEntities) {
		this.encounterMapDbEntities = encounterMapDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "encounterDbEntity")
	public Set<ProcedureDbEntity> getProcedureDbEntities() {
		return this.procedureDbEntities;
	}

	public void setProcedureDbEntities(Set<ProcedureDbEntity> procedureDbEntities) {
		this.procedureDbEntities = procedureDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "encounterDbEntity")
	public Set<ImmunizationDbEntity> getImmunizationDbEntities() {
		return this.immunizationDbEntities;
	}

	public void setImmunizationDbEntities(Set<ImmunizationDbEntity> immunizationDbEntities) {
		this.immunizationDbEntities = immunizationDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "encounterDbEntity")
	public Set<ReferralRequestDbEntity> getReferralRequestDbEntities() {
		return this.referralRequestDbEntities;
	}

	public void setReferralRequestDbEntities(Set<ReferralRequestDbEntity> referralRequestDbEntities) {
		this.referralRequestDbEntities = referralRequestDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "encounterDbEntity")
	public Set<CareTeamDbEntity> getCareTeamDbEntities() {
		return this.careTeamDbEntities;
	}

	public void setCareTeamDbEntities(Set<CareTeamDbEntity> careTeamDbEntities) {
		this.careTeamDbEntities = careTeamDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "encounterDbEntity")
	public Set<ConditionDbEntity> getConditionDbEntities() {
		return this.conditionDbEntities;
	}

	public void setConditionDbEntities(Set<ConditionDbEntity> conditionDbEntities) {
		this.conditionDbEntities = conditionDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "encounterDbEntity")
	public Set<ProcedureDbEntity> getProcedureDbEntities_1() {
		return this.procedureDbEntities_1;
	}

	public void setProcedureDbEntities_1(Set<ProcedureDbEntity> procedureDbEntities_1) {
		this.procedureDbEntities_1 = procedureDbEntities_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "encounterDbEntity")
	public Set<MedicationAdministrationDbEntity> getMedicationAdministrationDbEntities() {
		return this.medicationAdministrationDbEntities;
	}

	public void setMedicationAdministrationDbEntities(
			Set<MedicationAdministrationDbEntity> medicationAdministrationDbEntities) {
		this.medicationAdministrationDbEntities = medicationAdministrationDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "encounterDbEntity")
	public Set<ConditionDbEntity> getConditionDbEntities_1() {
		return this.conditionDbEntities_1;
	}

	public void setConditionDbEntities_1(Set<ConditionDbEntity> conditionDbEntities_1) {
		this.conditionDbEntities_1 = conditionDbEntities_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "encounterDbEntity")
	public Set<ObservationDbEntity> getObservationDbEntities() {
		return this.observationDbEntities;
	}

	public void setObservationDbEntities(Set<ObservationDbEntity> observationDbEntities) {
		this.observationDbEntities = observationDbEntities;
	}

}
