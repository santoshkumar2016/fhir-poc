package com.cantatahealth.fhir.db.model;
// Generated Oct 31, 2017 5:51:36 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PatientDbEntity generated by hbm2java
 */
@Entity
@Table(name = "Patient", schema = "dbo", catalog = "FHIRDB")
public class PatientDbEntity implements java.io.Serializable {

	private long id;
	private CodingDbEntity codingDbEntityByGender;
	private CodingDbEntity codingDbEntityByMaritalstatus;
	private Date birthdate;
	private Boolean deceasedboolean;
	private Date deceaseddatetime;
	private Boolean multiplebirthboolean;
	private Set<ReferralRequestDbEntity> referralRequestDbEntities = new HashSet<ReferralRequestDbEntity>(0);
	private Set<MedicationAdministrationDbEntity> medicationAdministrationDbEntities = new HashSet<MedicationAdministrationDbEntity>(
			0);
	private Set<GoalDbEntity> goalDbEntities = new HashSet<GoalDbEntity>(0);
	private Set<ImmunizationDbEntity> immunizationDbEntities = new HashSet<ImmunizationDbEntity>(0);
	private Set<ObservationDbEntity> observationDbEntities = new HashSet<ObservationDbEntity>(0);
	private Set<AllergyIntoleranceDbEntity> allergyIntoleranceDbEntities = new HashSet<AllergyIntoleranceDbEntity>(0);
	private Set<EncounterDbEntity> encounterDbEntities = new HashSet<EncounterDbEntity>(0);
	private Set<PatientMapDbEntity> patientMapDbEntities = new HashSet<PatientMapDbEntity>(0);
	private Set<ProcedureDbEntity> procedureDbEntities = new HashSet<ProcedureDbEntity>(0);
	private Set<CareTeamDbEntity> careTeamDbEntities = new HashSet<CareTeamDbEntity>(0);
	private Set<ConditionDbEntity> conditionDbEntities = new HashSet<ConditionDbEntity>(0);
	private Set<DeviceDbEntity> deviceDbEntities = new HashSet<DeviceDbEntity>(0);
	private Set<ProcedureDbEntity> procedureDbEntities_1 = new HashSet<ProcedureDbEntity>(0);

	public PatientDbEntity() {
	}

	public PatientDbEntity(long id) {
		this.id = id;
	}

	public PatientDbEntity(long id, CodingDbEntity codingDbEntityByGender, CodingDbEntity codingDbEntityByMaritalstatus,
			Date birthdate, Boolean deceasedboolean, Date deceaseddatetime, Boolean multiplebirthboolean,
			Set<ReferralRequestDbEntity> referralRequestDbEntities,
			Set<MedicationAdministrationDbEntity> medicationAdministrationDbEntities, Set<GoalDbEntity> goalDbEntities,
			Set<ImmunizationDbEntity> immunizationDbEntities, Set<ObservationDbEntity> observationDbEntities,
			Set<AllergyIntoleranceDbEntity> allergyIntoleranceDbEntities, Set<EncounterDbEntity> encounterDbEntities,
			Set<PatientMapDbEntity> patientMapDbEntities, Set<ProcedureDbEntity> procedureDbEntities,
			Set<CareTeamDbEntity> careTeamDbEntities, Set<ConditionDbEntity> conditionDbEntities,
			Set<DeviceDbEntity> deviceDbEntities, Set<ProcedureDbEntity> procedureDbEntities_1) {
		this.id = id;
		this.codingDbEntityByGender = codingDbEntityByGender;
		this.codingDbEntityByMaritalstatus = codingDbEntityByMaritalstatus;
		this.birthdate = birthdate;
		this.deceasedboolean = deceasedboolean;
		this.deceaseddatetime = deceaseddatetime;
		this.multiplebirthboolean = multiplebirthboolean;
		this.referralRequestDbEntities = referralRequestDbEntities;
		this.medicationAdministrationDbEntities = medicationAdministrationDbEntities;
		this.goalDbEntities = goalDbEntities;
		this.immunizationDbEntities = immunizationDbEntities;
		this.observationDbEntities = observationDbEntities;
		this.allergyIntoleranceDbEntities = allergyIntoleranceDbEntities;
		this.encounterDbEntities = encounterDbEntities;
		this.patientMapDbEntities = patientMapDbEntities;
		this.procedureDbEntities = procedureDbEntities;
		this.careTeamDbEntities = careTeamDbEntities;
		this.conditionDbEntities = conditionDbEntities;
		this.deviceDbEntities = deviceDbEntities;
		this.procedureDbEntities_1 = procedureDbEntities_1;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false, precision = 18, scale = 0)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "gender")
	public CodingDbEntity getCodingDbEntityByGender() {
		return this.codingDbEntityByGender;
	}

	public void setCodingDbEntityByGender(CodingDbEntity codingDbEntityByGender) {
		this.codingDbEntityByGender = codingDbEntityByGender;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "maritalstatus")
	public CodingDbEntity getCodingDbEntityByMaritalstatus() {
		return this.codingDbEntityByMaritalstatus;
	}

	public void setCodingDbEntityByMaritalstatus(CodingDbEntity codingDbEntityByMaritalstatus) {
		this.codingDbEntityByMaritalstatus = codingDbEntityByMaritalstatus;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "birthdate", length = 23)
	public Date getBirthdate() {
		return this.birthdate;
	}

	public void setBirthdate(Date birthdate) {
		this.birthdate = birthdate;
	}

	@Column(name = "deceasedboolean")
	public Boolean getDeceasedboolean() {
		return this.deceasedboolean;
	}

	public void setDeceasedboolean(Boolean deceasedboolean) {
		this.deceasedboolean = deceasedboolean;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deceaseddatetime", length = 23)
	public Date getDeceaseddatetime() {
		return this.deceaseddatetime;
	}

	public void setDeceaseddatetime(Date deceaseddatetime) {
		this.deceaseddatetime = deceaseddatetime;
	}

	@Column(name = "multiplebirthboolean")
	public Boolean getMultiplebirthboolean() {
		return this.multiplebirthboolean;
	}

	public void setMultiplebirthboolean(Boolean multiplebirthboolean) {
		this.multiplebirthboolean = multiplebirthboolean;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDbEntity")
	public Set<ReferralRequestDbEntity> getReferralRequestDbEntities() {
		return this.referralRequestDbEntities;
	}

	public void setReferralRequestDbEntities(Set<ReferralRequestDbEntity> referralRequestDbEntities) {
		this.referralRequestDbEntities = referralRequestDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDbEntity")
	public Set<MedicationAdministrationDbEntity> getMedicationAdministrationDbEntities() {
		return this.medicationAdministrationDbEntities;
	}

	public void setMedicationAdministrationDbEntities(
			Set<MedicationAdministrationDbEntity> medicationAdministrationDbEntities) {
		this.medicationAdministrationDbEntities = medicationAdministrationDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDbEntity")
	public Set<GoalDbEntity> getGoalDbEntities() {
		return this.goalDbEntities;
	}

	public void setGoalDbEntities(Set<GoalDbEntity> goalDbEntities) {
		this.goalDbEntities = goalDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDbEntity")
	public Set<ImmunizationDbEntity> getImmunizationDbEntities() {
		return this.immunizationDbEntities;
	}

	public void setImmunizationDbEntities(Set<ImmunizationDbEntity> immunizationDbEntities) {
		this.immunizationDbEntities = immunizationDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDbEntity")
	public Set<ObservationDbEntity> getObservationDbEntities() {
		return this.observationDbEntities;
	}

	public void setObservationDbEntities(Set<ObservationDbEntity> observationDbEntities) {
		this.observationDbEntities = observationDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDbEntity")
	public Set<AllergyIntoleranceDbEntity> getAllergyIntoleranceDbEntities() {
		return this.allergyIntoleranceDbEntities;
	}

	public void setAllergyIntoleranceDbEntities(Set<AllergyIntoleranceDbEntity> allergyIntoleranceDbEntities) {
		this.allergyIntoleranceDbEntities = allergyIntoleranceDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDbEntity")
	public Set<EncounterDbEntity> getEncounterDbEntities() {
		return this.encounterDbEntities;
	}

	public void setEncounterDbEntities(Set<EncounterDbEntity> encounterDbEntities) {
		this.encounterDbEntities = encounterDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDbEntity")
	public Set<PatientMapDbEntity> getPatientMapDbEntities() {
		return this.patientMapDbEntities;
	}

	public void setPatientMapDbEntities(Set<PatientMapDbEntity> patientMapDbEntities) {
		this.patientMapDbEntities = patientMapDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDbEntity")
	public Set<ProcedureDbEntity> getProcedureDbEntities() {
		return this.procedureDbEntities;
	}

	public void setProcedureDbEntities(Set<ProcedureDbEntity> procedureDbEntities) {
		this.procedureDbEntities = procedureDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDbEntity")
	public Set<CareTeamDbEntity> getCareTeamDbEntities() {
		return this.careTeamDbEntities;
	}

	public void setCareTeamDbEntities(Set<CareTeamDbEntity> careTeamDbEntities) {
		this.careTeamDbEntities = careTeamDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDbEntity")
	public Set<ConditionDbEntity> getConditionDbEntities() {
		return this.conditionDbEntities;
	}

	public void setConditionDbEntities(Set<ConditionDbEntity> conditionDbEntities) {
		this.conditionDbEntities = conditionDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDbEntity")
	public Set<DeviceDbEntity> getDeviceDbEntities() {
		return this.deviceDbEntities;
	}

	public void setDeviceDbEntities(Set<DeviceDbEntity> deviceDbEntities) {
		this.deviceDbEntities = deviceDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDbEntity")
	public Set<ProcedureDbEntity> getProcedureDbEntities_1() {
		return this.procedureDbEntities_1;
	}

	public void setProcedureDbEntities_1(Set<ProcedureDbEntity> procedureDbEntities_1) {
		this.procedureDbEntities_1 = procedureDbEntities_1;
	}

}
