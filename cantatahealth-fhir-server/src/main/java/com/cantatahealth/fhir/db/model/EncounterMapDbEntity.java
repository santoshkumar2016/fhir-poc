package com.cantatahealth.fhir.db.model;
// Generated Oct 31, 2017 5:51:36 PM by Hibernate Tools 4.3.1.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * EncounterMapDbEntity generated by hbm2java
 */
@Entity
@Table(name = "EncounterMap", schema = "dbo", catalog = "FHIRDB")
public class EncounterMapDbEntity implements java.io.Serializable {

	private long id;
	private ConditionDbEntity conditionDbEntity;
	private EncounterDbEntity encounterDbEntity;
	private LocationDbEntity locationDbEntity;
	private PractitionerDbEntity practitionerDbEntity;
	private ReferralRequestDbEntity referralRequestDbEntity;

	public EncounterMapDbEntity() {
	}

	public EncounterMapDbEntity(long id) {
		this.id = id;
	}

	public EncounterMapDbEntity(long id, ConditionDbEntity conditionDbEntity, EncounterDbEntity encounterDbEntity,
			LocationDbEntity locationDbEntity, PractitionerDbEntity practitionerDbEntity,
			ReferralRequestDbEntity referralRequestDbEntity) {
		this.id = id;
		this.conditionDbEntity = conditionDbEntity;
		this.encounterDbEntity = encounterDbEntity;
		this.locationDbEntity = locationDbEntity;
		this.practitionerDbEntity = practitionerDbEntity;
		this.referralRequestDbEntity = referralRequestDbEntity;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false, precision = 18, scale = 0)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "condition")
	public ConditionDbEntity getConditionDbEntity() {
		return this.conditionDbEntity;
	}

	public void setConditionDbEntity(ConditionDbEntity conditionDbEntity) {
		this.conditionDbEntity = conditionDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "encounter")
	public EncounterDbEntity getEncounterDbEntity() {
		return this.encounterDbEntity;
	}

	public void setEncounterDbEntity(EncounterDbEntity encounterDbEntity) {
		this.encounterDbEntity = encounterDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "location")
	public LocationDbEntity getLocationDbEntity() {
		return this.locationDbEntity;
	}

	public void setLocationDbEntity(LocationDbEntity locationDbEntity) {
		this.locationDbEntity = locationDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "practitioner")
	public PractitionerDbEntity getPractitionerDbEntity() {
		return this.practitionerDbEntity;
	}

	public void setPractitionerDbEntity(PractitionerDbEntity practitionerDbEntity) {
		this.practitionerDbEntity = practitionerDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "referralrequest")
	public ReferralRequestDbEntity getReferralRequestDbEntity() {
		return this.referralRequestDbEntity;
	}

	public void setReferralRequestDbEntity(ReferralRequestDbEntity referralRequestDbEntity) {
		this.referralRequestDbEntity = referralRequestDbEntity;
	}

}
