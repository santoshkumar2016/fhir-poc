package com.cantatahealth.fhir.db.model;
// Generated Oct 31, 2017 5:51:36 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * MedicationAdministrationDbEntity generated by hbm2java
 */
@Entity
@Table(name = "MedicationAdministration", schema = "dbo", catalog = "FHIRDB")
public class MedicationAdministrationDbEntity implements java.io.Serializable {

	private long id;
	private CodingDbEntity codingDbEntityByStatus;
	private CodingDbEntity codingDbEntityByReasoncode;
	private CodingDbEntity codingDbEntityByReasonnotgiven;
	private CodingDbEntity codingDbEntityByCategory;
	private DosageDbEntity dosageDbEntity;
	private EncounterDbEntity encounterDbEntity;
	private MedicationDbEntity medicationDbEntity;
	private PatientDbEntity patientDbEntity;
	private PeriodDbEntity periodDbEntity;
	private Boolean notgiven;
	private String note;
	private Date createddate;
	private String createdby;
	private Date updateddate;
	private String updatedby;
	private Set<MedicationAdministrationMapDbEntity> medicationAdministrationMapDbEntities = new HashSet<MedicationAdministrationMapDbEntity>(
			0);

	public MedicationAdministrationDbEntity() {
	}

	public MedicationAdministrationDbEntity(long id) {
		this.id = id;
	}

	public MedicationAdministrationDbEntity(long id, CodingDbEntity codingDbEntityByStatus,
			CodingDbEntity codingDbEntityByReasoncode, CodingDbEntity codingDbEntityByReasonnotgiven,
			CodingDbEntity codingDbEntityByCategory, DosageDbEntity dosageDbEntity, EncounterDbEntity encounterDbEntity,
			MedicationDbEntity medicationDbEntity, PatientDbEntity patientDbEntity, PeriodDbEntity periodDbEntity,
			Boolean notgiven, String note, Date createddate, String createdby, Date updateddate, String updatedby,
			Set<MedicationAdministrationMapDbEntity> medicationAdministrationMapDbEntities) {
		this.id = id;
		this.codingDbEntityByStatus = codingDbEntityByStatus;
		this.codingDbEntityByReasoncode = codingDbEntityByReasoncode;
		this.codingDbEntityByReasonnotgiven = codingDbEntityByReasonnotgiven;
		this.codingDbEntityByCategory = codingDbEntityByCategory;
		this.dosageDbEntity = dosageDbEntity;
		this.encounterDbEntity = encounterDbEntity;
		this.medicationDbEntity = medicationDbEntity;
		this.patientDbEntity = patientDbEntity;
		this.periodDbEntity = periodDbEntity;
		this.notgiven = notgiven;
		this.note = note;
		this.createddate = createddate;
		this.createdby = createdby;
		this.updateddate = updateddate;
		this.updatedby = updatedby;
		this.medicationAdministrationMapDbEntities = medicationAdministrationMapDbEntities;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false, precision = 18, scale = 0)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status")
	public CodingDbEntity getCodingDbEntityByStatus() {
		return this.codingDbEntityByStatus;
	}

	public void setCodingDbEntityByStatus(CodingDbEntity codingDbEntityByStatus) {
		this.codingDbEntityByStatus = codingDbEntityByStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "reasoncode")
	public CodingDbEntity getCodingDbEntityByReasoncode() {
		return this.codingDbEntityByReasoncode;
	}

	public void setCodingDbEntityByReasoncode(CodingDbEntity codingDbEntityByReasoncode) {
		this.codingDbEntityByReasoncode = codingDbEntityByReasoncode;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "reasonnotgiven")
	public CodingDbEntity getCodingDbEntityByReasonnotgiven() {
		return this.codingDbEntityByReasonnotgiven;
	}

	public void setCodingDbEntityByReasonnotgiven(CodingDbEntity codingDbEntityByReasonnotgiven) {
		this.codingDbEntityByReasonnotgiven = codingDbEntityByReasonnotgiven;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category")
	public CodingDbEntity getCodingDbEntityByCategory() {
		return this.codingDbEntityByCategory;
	}

	public void setCodingDbEntityByCategory(CodingDbEntity codingDbEntityByCategory) {
		this.codingDbEntityByCategory = codingDbEntityByCategory;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "dosage")
	public DosageDbEntity getDosageDbEntity() {
		return this.dosageDbEntity;
	}

	public void setDosageDbEntity(DosageDbEntity dosageDbEntity) {
		this.dosageDbEntity = dosageDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "context")
	public EncounterDbEntity getEncounterDbEntity() {
		return this.encounterDbEntity;
	}

	public void setEncounterDbEntity(EncounterDbEntity encounterDbEntity) {
		this.encounterDbEntity = encounterDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "medication")
	public MedicationDbEntity getMedicationDbEntity() {
		return this.medicationDbEntity;
	}

	public void setMedicationDbEntity(MedicationDbEntity medicationDbEntity) {
		this.medicationDbEntity = medicationDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "subject")
	public PatientDbEntity getPatientDbEntity() {
		return this.patientDbEntity;
	}

	public void setPatientDbEntity(PatientDbEntity patientDbEntity) {
		this.patientDbEntity = patientDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "effectiveperiod")
	public PeriodDbEntity getPeriodDbEntity() {
		return this.periodDbEntity;
	}

	public void setPeriodDbEntity(PeriodDbEntity periodDbEntity) {
		this.periodDbEntity = periodDbEntity;
	}

	@Column(name = "notgiven")
	public Boolean getNotgiven() {
		return this.notgiven;
	}

	public void setNotgiven(Boolean notgiven) {
		this.notgiven = notgiven;
	}

	@Column(name = "note")
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createddate", length = 23)
	public Date getCreateddate() {
		return this.createddate;
	}

	public void setCreateddate(Date createddate) {
		this.createddate = createddate;
	}

	@Column(name = "createdby")
	public String getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updateddate", length = 23)
	public Date getUpdateddate() {
		return this.updateddate;
	}

	public void setUpdateddate(Date updateddate) {
		this.updateddate = updateddate;
	}

	@Column(name = "updatedby")
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "medicationAdministrationDbEntity")
	public Set<MedicationAdministrationMapDbEntity> getMedicationAdministrationMapDbEntities() {
		return this.medicationAdministrationMapDbEntities;
	}

	public void setMedicationAdministrationMapDbEntities(
			Set<MedicationAdministrationMapDbEntity> medicationAdministrationMapDbEntities) {
		this.medicationAdministrationMapDbEntities = medicationAdministrationMapDbEntities;
	}

}
