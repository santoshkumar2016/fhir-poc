package com.cantatahealth.fhir.db.model;
// Generated Oct 31, 2017 5:51:36 PM by Hibernate Tools 4.3.1.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * PractitionerMapDbEntity generated by hbm2java
 */
@Entity
@Table(name = "PractitionerMap", schema = "dbo", catalog = "FHIRDB")
public class PractitionerMapDbEntity implements java.io.Serializable {

	private long id;
	private AddressDbEntity addressDbEntity;
	private ContactPointDbEntity contactPointDbEntity;
	private HumanNameDbEntity humanNameDbEntity;
	private PractitionerDbEntity practitionerDbEntity;

	public PractitionerMapDbEntity() {
	}

	public PractitionerMapDbEntity(long id, PractitionerDbEntity practitionerDbEntity) {
		this.id = id;
		this.practitionerDbEntity = practitionerDbEntity;
	}

	public PractitionerMapDbEntity(long id, AddressDbEntity addressDbEntity, ContactPointDbEntity contactPointDbEntity,
			HumanNameDbEntity humanNameDbEntity, PractitionerDbEntity practitionerDbEntity) {
		this.id = id;
		this.addressDbEntity = addressDbEntity;
		this.contactPointDbEntity = contactPointDbEntity;
		this.humanNameDbEntity = humanNameDbEntity;
		this.practitionerDbEntity = practitionerDbEntity;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false, precision = 18, scale = 0)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "address")
	public AddressDbEntity getAddressDbEntity() {
		return this.addressDbEntity;
	}

	public void setAddressDbEntity(AddressDbEntity addressDbEntity) {
		this.addressDbEntity = addressDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "contactpoint")
	public ContactPointDbEntity getContactPointDbEntity() {
		return this.contactPointDbEntity;
	}

	public void setContactPointDbEntity(ContactPointDbEntity contactPointDbEntity) {
		this.contactPointDbEntity = contactPointDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "humanname")
	public HumanNameDbEntity getHumanNameDbEntity() {
		return this.humanNameDbEntity;
	}

	public void setHumanNameDbEntity(HumanNameDbEntity humanNameDbEntity) {
		this.humanNameDbEntity = humanNameDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "practitioner", nullable = false)
	public PractitionerDbEntity getPractitionerDbEntity() {
		return this.practitionerDbEntity;
	}

	public void setPractitionerDbEntity(PractitionerDbEntity practitionerDbEntity) {
		this.practitionerDbEntity = practitionerDbEntity;
	}

}
