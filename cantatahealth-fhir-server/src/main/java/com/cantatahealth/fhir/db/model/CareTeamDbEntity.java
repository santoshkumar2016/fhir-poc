package com.cantatahealth.fhir.db.model;
// Generated Oct 31, 2017 5:51:36 PM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * CareTeamDbEntity generated by hbm2java
 */
@Entity
@Table(name = "CareTeam", schema = "dbo", catalog = "FHIRDB")
public class CareTeamDbEntity implements java.io.Serializable {

	private long id;
	private CodingDbEntity codingDbEntityByStatus;
	private CodingDbEntity codingDbEntityByCategory;
	private EncounterDbEntity encounterDbEntity;
	private PatientDbEntity patientDbEntity;
	private PeriodDbEntity periodDbEntity;
	private String name;
	private String note;
	private Set<CareTeamMapDbEntity> careTeamMapDbEntities = new HashSet<CareTeamMapDbEntity>(0);

	public CareTeamDbEntity() {
	}

	public CareTeamDbEntity(long id) {
		this.id = id;
	}

	public CareTeamDbEntity(long id, CodingDbEntity codingDbEntityByStatus, CodingDbEntity codingDbEntityByCategory,
			EncounterDbEntity encounterDbEntity, PatientDbEntity patientDbEntity, PeriodDbEntity periodDbEntity,
			String name, String note, Set<CareTeamMapDbEntity> careTeamMapDbEntities) {
		this.id = id;
		this.codingDbEntityByStatus = codingDbEntityByStatus;
		this.codingDbEntityByCategory = codingDbEntityByCategory;
		this.encounterDbEntity = encounterDbEntity;
		this.patientDbEntity = patientDbEntity;
		this.periodDbEntity = periodDbEntity;
		this.name = name;
		this.note = note;
		this.careTeamMapDbEntities = careTeamMapDbEntities;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false, precision = 18, scale = 0)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status")
	public CodingDbEntity getCodingDbEntityByStatus() {
		return this.codingDbEntityByStatus;
	}

	public void setCodingDbEntityByStatus(CodingDbEntity codingDbEntityByStatus) {
		this.codingDbEntityByStatus = codingDbEntityByStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category")
	public CodingDbEntity getCodingDbEntityByCategory() {
		return this.codingDbEntityByCategory;
	}

	public void setCodingDbEntityByCategory(CodingDbEntity codingDbEntityByCategory) {
		this.codingDbEntityByCategory = codingDbEntityByCategory;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "context")
	public EncounterDbEntity getEncounterDbEntity() {
		return this.encounterDbEntity;
	}

	public void setEncounterDbEntity(EncounterDbEntity encounterDbEntity) {
		this.encounterDbEntity = encounterDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "subject")
	public PatientDbEntity getPatientDbEntity() {
		return this.patientDbEntity;
	}

	public void setPatientDbEntity(PatientDbEntity patientDbEntity) {
		this.patientDbEntity = patientDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "period")
	public PeriodDbEntity getPeriodDbEntity() {
		return this.periodDbEntity;
	}

	public void setPeriodDbEntity(PeriodDbEntity periodDbEntity) {
		this.periodDbEntity = periodDbEntity;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "note")
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "careTeamDbEntity")
	public Set<CareTeamMapDbEntity> getCareTeamMapDbEntities() {
		return this.careTeamMapDbEntities;
	}

	public void setCareTeamMapDbEntities(Set<CareTeamMapDbEntity> careTeamMapDbEntities) {
		this.careTeamMapDbEntities = careTeamMapDbEntities;
	}

}
