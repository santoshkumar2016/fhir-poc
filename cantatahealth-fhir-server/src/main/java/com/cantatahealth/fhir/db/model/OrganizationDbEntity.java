package com.cantatahealth.fhir.db.model;
// Generated Oct 31, 2017 5:51:36 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * OrganizationDbEntity generated by hbm2java
 */
@Entity
@Table(name = "Organization", schema = "dbo", catalog = "FHIRDB")
public class OrganizationDbEntity implements java.io.Serializable {

	private long id;
	private String name;
	private Date createddate;
	private String createdby;
	private Date updateddate;
	private String updatedby;
	private Set<LocationMapDbEntity> locationMapDbEntities = new HashSet<LocationMapDbEntity>(0);
	private Set<DeviceDbEntity> deviceDbEntities = new HashSet<DeviceDbEntity>(0);
	private Set<EncounterDbEntity> encounterDbEntities = new HashSet<EncounterDbEntity>(0);
	private Set<LocationMapDbEntity> locationMapDbEntities_1 = new HashSet<LocationMapDbEntity>(0);
	private Set<ImmunizationDbEntity> immunizationDbEntities = new HashSet<ImmunizationDbEntity>(0);
	private Set<PatientMapDbEntity> patientMapDbEntities = new HashSet<PatientMapDbEntity>(0);

	public OrganizationDbEntity() {
	}

	public OrganizationDbEntity(long id) {
		this.id = id;
	}

	public OrganizationDbEntity(long id, String name, Date createddate, String createdby, Date updateddate,
			String updatedby, Set<LocationMapDbEntity> locationMapDbEntities, Set<DeviceDbEntity> deviceDbEntities,
			Set<EncounterDbEntity> encounterDbEntities, Set<LocationMapDbEntity> locationMapDbEntities_1,
			Set<ImmunizationDbEntity> immunizationDbEntities, Set<PatientMapDbEntity> patientMapDbEntities) {
		this.id = id;
		this.name = name;
		this.createddate = createddate;
		this.createdby = createdby;
		this.updateddate = updateddate;
		this.updatedby = updatedby;
		this.locationMapDbEntities = locationMapDbEntities;
		this.deviceDbEntities = deviceDbEntities;
		this.encounterDbEntities = encounterDbEntities;
		this.locationMapDbEntities_1 = locationMapDbEntities_1;
		this.immunizationDbEntities = immunizationDbEntities;
		this.patientMapDbEntities = patientMapDbEntities;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false, precision = 18, scale = 0)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createddate", length = 23)
	public Date getCreateddate() {
		return this.createddate;
	}

	public void setCreateddate(Date createddate) {
		this.createddate = createddate;
	}

	@Column(name = "createdby")
	public String getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updateddate", length = 23)
	public Date getUpdateddate() {
		return this.updateddate;
	}

	public void setUpdateddate(Date updateddate) {
		this.updateddate = updateddate;
	}

	@Column(name = "updatedby")
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organizationDbEntity")
	public Set<LocationMapDbEntity> getLocationMapDbEntities() {
		return this.locationMapDbEntities;
	}

	public void setLocationMapDbEntities(Set<LocationMapDbEntity> locationMapDbEntities) {
		this.locationMapDbEntities = locationMapDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organizationDbEntity")
	public Set<DeviceDbEntity> getDeviceDbEntities() {
		return this.deviceDbEntities;
	}

	public void setDeviceDbEntities(Set<DeviceDbEntity> deviceDbEntities) {
		this.deviceDbEntities = deviceDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organizationDbEntity")
	public Set<EncounterDbEntity> getEncounterDbEntities() {
		return this.encounterDbEntities;
	}

	public void setEncounterDbEntities(Set<EncounterDbEntity> encounterDbEntities) {
		this.encounterDbEntities = encounterDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organizationDbEntity")
	public Set<LocationMapDbEntity> getLocationMapDbEntities_1() {
		return this.locationMapDbEntities_1;
	}

	public void setLocationMapDbEntities_1(Set<LocationMapDbEntity> locationMapDbEntities_1) {
		this.locationMapDbEntities_1 = locationMapDbEntities_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organizationDbEntity")
	public Set<ImmunizationDbEntity> getImmunizationDbEntities() {
		return this.immunizationDbEntities;
	}

	public void setImmunizationDbEntities(Set<ImmunizationDbEntity> immunizationDbEntities) {
		this.immunizationDbEntities = immunizationDbEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organizationDbEntity")
	public Set<PatientMapDbEntity> getPatientMapDbEntities() {
		return this.patientMapDbEntities;
	}

	public void setPatientMapDbEntities(Set<PatientMapDbEntity> patientMapDbEntities) {
		this.patientMapDbEntities = patientMapDbEntities;
	}

}
