package com.cantatahealth.fhir.db.model;
// Generated Oct 31, 2017 5:51:36 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * RelatedPersonDbEntity generated by hbm2java
 */
@Entity
@Table(name = "RelatedPerson", schema = "dbo", catalog = "FHIRDB")
public class RelatedPersonDbEntity implements java.io.Serializable {

	private long id;
	private AddressDbEntity addressDbEntity;
	private CodingDbEntity codingDbEntityByRelationship;
	private CodingDbEntity codingDbEntityByGender;
	private ContactPointDbEntity contactPointDbEntity;
	private HumanNameDbEntity humanNameDbEntity;
	private Date birthdate;
	private Set<PatientMapDbEntity> patientMapDbEntities = new HashSet<PatientMapDbEntity>(0);

	public RelatedPersonDbEntity() {
	}

	public RelatedPersonDbEntity(long id) {
		this.id = id;
	}

	public RelatedPersonDbEntity(long id, AddressDbEntity addressDbEntity, CodingDbEntity codingDbEntityByRelationship,
			CodingDbEntity codingDbEntityByGender, ContactPointDbEntity contactPointDbEntity,
			HumanNameDbEntity humanNameDbEntity, Date birthdate, Set<PatientMapDbEntity> patientMapDbEntities) {
		this.id = id;
		this.addressDbEntity = addressDbEntity;
		this.codingDbEntityByRelationship = codingDbEntityByRelationship;
		this.codingDbEntityByGender = codingDbEntityByGender;
		this.contactPointDbEntity = contactPointDbEntity;
		this.humanNameDbEntity = humanNameDbEntity;
		this.birthdate = birthdate;
		this.patientMapDbEntities = patientMapDbEntities;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false, precision = 18, scale = 0)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "address")
	public AddressDbEntity getAddressDbEntity() {
		return this.addressDbEntity;
	}

	public void setAddressDbEntity(AddressDbEntity addressDbEntity) {
		this.addressDbEntity = addressDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "relationship")
	public CodingDbEntity getCodingDbEntityByRelationship() {
		return this.codingDbEntityByRelationship;
	}

	public void setCodingDbEntityByRelationship(CodingDbEntity codingDbEntityByRelationship) {
		this.codingDbEntityByRelationship = codingDbEntityByRelationship;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "gender")
	public CodingDbEntity getCodingDbEntityByGender() {
		return this.codingDbEntityByGender;
	}

	public void setCodingDbEntityByGender(CodingDbEntity codingDbEntityByGender) {
		this.codingDbEntityByGender = codingDbEntityByGender;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "contactpoint")
	public ContactPointDbEntity getContactPointDbEntity() {
		return this.contactPointDbEntity;
	}

	public void setContactPointDbEntity(ContactPointDbEntity contactPointDbEntity) {
		this.contactPointDbEntity = contactPointDbEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "name")
	public HumanNameDbEntity getHumanNameDbEntity() {
		return this.humanNameDbEntity;
	}

	public void setHumanNameDbEntity(HumanNameDbEntity humanNameDbEntity) {
		this.humanNameDbEntity = humanNameDbEntity;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "birthdate", length = 23)
	public Date getBirthdate() {
		return this.birthdate;
	}

	public void setBirthdate(Date birthdate) {
		this.birthdate = birthdate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "relatedPersonDbEntity")
	public Set<PatientMapDbEntity> getPatientMapDbEntities() {
		return this.patientMapDbEntities;
	}

	public void setPatientMapDbEntities(Set<PatientMapDbEntity> patientMapDbEntities) {
		this.patientMapDbEntities = patientMapDbEntities;
	}

}
